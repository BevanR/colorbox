<?php
// $Id$
/**
 * @file
 * A light-weight, customizable lightbox plugin for jQuery 1.3
 */
function colorbox_menu() {
  $items['admin/settings/colorbox'] = array(
    'title' => 'Colorbox Settings',
    'description' => 'Adjust Colorbox settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('colorbox_admin_settings'),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

function colorbox_init() {
  if (variable_get('colorbox_js_path', FALSE)) {
    drupal_add_js(variable_get('colorbox_js_path', ''));
  }
  if (variable_get('colorbox_css_path', FALSE)) {
    drupal_add_css(variable_get('colorbox_css_path', ''));
  }
  $js_settings = array(
    'image_node_handler' => variable_get('colorbox_auto_image_nodes', 'disabled'),
  );
  drupal_add_js(array('colorbox' => $js_settings), 'setting');
  drupal_add_js(drupal_get_path('module', 'colorbox') .'/colorbox.js');
}

function colorbox_admin_settings() {
  $form['colorbox_js_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Path to Colorbox Javascript file...'),
    '#default_value' => variable_get('colorbox_js_path', ''),
    '#description' => t('Enter the path relative to Drupal root where colorbox.js is located'),
  );
  $form['colorbox_css_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Path to Colorbox CSS file...'),
    '#default_value' => variable_get('colorbox_css_path', ''),
    '#description' => t('Enter the path relative to Drupal root where colorbox.css is located'),
  );
  $form['colorbox_automatic'] = array(
	  '#type' => 'fieldset',
	  '#title' => t('Automatic Image Settings'),
	  '#collapsible' => TRUE,
	  '#collapsed' => FALSE,
  );
  $form['colorbox_automatic']['colorbox_auto_image_nodes'] = array(
    '#type' => 'select',
    '#title' => t('Image Node Setting'),
    '#default_value' => variable_get('colorbox_auto_image_nodes', 'disabled'),
    '#options' => array(
      'disabled' => t('Disabled'),
      'colorbox' => t('Colorbox'),
    ),
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_link_alter().
 */
function colorbox_link_alter(&$links, $node) { 
  if ($node->type != 'image') {
    return;
  }
  $sizes = array(
    '_original',
    'preview',
    'thumbnail',
  );
  foreach ($sizes as $size) {
    $links['image_size_'. $size]['attributes']['class'] = "image image-{$size} colorbox";
    $links['image_size_'. $size]['href'] = $node->images[$size];
    unset($links['image_size_'. $size]['query']);
  }
}